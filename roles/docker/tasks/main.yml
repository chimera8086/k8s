# установка доп софта для установки докера
- name: install other packet
  apt:
    state: present
    pkg: 
      - apt-transport-https
      - ca-certificates
      - gnupg2
      - software-properties-common
      - curl
    update_cache: yes

# репа докера - качаем ключ
- name: repo key add
  apt_key:
    url: https://download.docker.com/linux/{{ansible_lsb.id|lower}}/gpg
    state: present

# репа докера - добавляем адрес
- name: repo add
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/{{ansible_lsb.id|lower}} {{ansible_distribution_release}} stable
    state: present
    filename: docker
    update_cache: yes

# установка самого докера
- name: install docker
  apt:
    state: present
    pkg:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    install_recommends: yes


######## System config ###########
# включить передачу пакетов
- name: forward enabled
  sysctl:
    name: "{{ item }}"
    value: '1'
    sysctl_set: yes
    state: present
    reload: yes
  with_items: 
    - net.ipv4.ip_forward
    - net.bridge.bridge-nf-call-iptables
    # - net.bridge.bridge-nf-call-ip6tables=1

- name: modprobe br_netfilter
  modprobe:
    name: "{{ item }}"
    state: present
  with_items: 
    - br_netfilter
    - overlay


######### Config docker ###########
# файл с настройкой работы cgroups
- name: deamon.json
  copy:
    src:  "{{ role_path }}/files/daemon.json"
    dest: "/etc/docker/daemon.json"
  register: file_copy


######### Contsinerd config ##########
- name: containerd config dir
  file:
    state: directory
    path: /etc/containerd/

- name: containerd config default
  shell:
    cmd: containerd config default > /etc/containerd/config.toml

- name: Set configd SystemdCgroup = true  
  ansible.builtin.lineinfile:
    path: /etc/containerd/config.toml
    regexp: 'SystemdCgroup = '
    line: SystemdCgroup = true
  register: containerd_config

######### Restart service ##########s
# подхватить изменения, если файл изменили
- name: restart docker service
  systemd:
    name: "{{ item.daemon }}"
    state: restarted
    enabled: yes
  when: "{{ item.file }}"
  with_items: 
    - { daemon: "docker", file: "file_copy.changed" }
    - { daemon: "containerd", file: "containerd_config.changed" }